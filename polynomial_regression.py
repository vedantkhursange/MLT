# -*- coding: utf-8 -*-
"""MLT_Practical3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BfMRji-jYuCbjAYQvu8bufY-ja7LUUUP
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.pipeline import make_pipeline
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

import pandas as pd

df=pd.read_csv('Ice_cream selling data.csv')

df.head()

df=df.rename(columns={'Ice Cream Sales (units)':'icecream_sales','Temperature (Â°C)':'temperature'})

x=df['temperature'].values.reshape(-1,1)
y=df['icecream_sales'].values.reshape(-1,1)

model=LinearRegression()

sns.regplot(x=x.flatten(),y=y.flatten())
plt.show()

model_pipeline=make_pipeline(PolynomialFeatures(degree=2),LinearRegression())

model_pipeline.fit(x,y)

y_pred_poly=model_pipeline.predict(x)

sns.set(style='whitegrid')
sns.scatterplot(x=x.flatten(), y=y.flatten(), color='red', label='Actual data')


sns.lineplot(x=x.flatten(), y=y_pred_poly.flatten(), color='blue', label='Polynomial regression')

plt.xlabel('X')
plt.ylabel('y')
plt.title('Polynomial Regression with Seaborn')


plt.legend()

plt.show()

