# -*- coding: utf-8 -*-
"""MLT_Practical4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UImbJBf3O9fzG-6kDp_1X2OlebxUjHYg
"""

# https://www.kaggle.com/datasets/johnsmith88/heart-disease-dataset

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

df=pd.read_csv("heart-disease.csv")
df.head()

df.target.value_counts()

df.isna().sum()

df.info()

plt.figure(figsize=(10,15))
sns.heatmap(df.corr(),
            annot=True,
            linewidths=0.2,
            fmt= ".2f",
            cmap="YlGnBu")
plt.show()

X=df.drop("target",axis=1)
y=df["target"]

from sklearn.preprocessing import StandardScaler
scalar=StandardScaler()

X=scalar.fit_transform(X)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

y_train

from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier()
knn.fit(X_train,y_train)

y_pred=knn.predict(X_test)

from sklearn.metrics import accuracy_score,confusion_matrix,classification_report
score=accuracy_score(y_test,y_pred)
cm=confusion_matrix(y_test,y_pred)
cr=classification_report(y_test,y_pred)
print(f"Accuracy Score is {score}")
print(f"Confusion Matrix is \n{cm}")
print(f"Classification Report is \n{cr}")

from sklearn.metrics import ConfusionMatrixDisplay
cm_display=ConfusionMatrixDisplay(cm)
cm_display.plot()
plt.show()

