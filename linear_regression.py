# -*- coding: utf-8 -*-
"""Practical_1b.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dvkGIYwEwNBiDc22TCgwfJpZdugFEpN6
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
# %matplotlib inline

from sklearn.datasets import fetch_california_housing

housing=fetch_california_housing()

housing

import pandas as pd
housing_df=pd.DataFrame(data=housing.data,columns=['MedInc',
  'HouseAge',
  'AveRooms',
  'AveBedrms',
  'Population',
  'AveOccup',
  'Latitude',
  'Longitude'])

housing_df

housing_df['MedHouseVal']=housing.target

housing_df.head()

from sklearn.model_selection import train_test_split

X=housing_df.drop(['MedHouseVal'],axis=1)

y=housing_df['MedHouseVal']

X

y

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)

from sklearn.linear_model import LinearRegression
lin_reg=LinearRegression()

lin_reg.fit(X_train,y_train)

y_pred=lin_reg.predict(X_test)

import numpy as np
y_test=np.array(y_test)

from sklearn.metrics import mean_squared_error
error=mean_squared_error(y_test,y_pred)

error

X.describe()

from sklearn.preprocessing import StandardScaler
scal=StandardScaler()

X_train=scal.fit_transform(X_train)
X_test=scal.fit_transform(X_test)

lin_reg.fit(X_train,y_train)

y_pred=lin_reg.predict(X_test)
mse=mean_squared_error(y_pred,y_test)
print(mse)

y_train_reshape=y_train.values.reshape(-1,1)
y_test_reshape=y_test.value.reshape(-1,1)

y_train.shape

y_train_scale=scal.fit_transform(y_train_reshape)
y_test_scale=scal.fit_transform(y_test_reshape)

lin_reg.fit(X_train,y_train_scale)
y_pred=lin_reg.predict(X_test)
mse=mean_squared_error(y_pred,y_test_scale)
print(mse)

